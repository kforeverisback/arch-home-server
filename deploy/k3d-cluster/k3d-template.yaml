# Reference: https://k3d.io/v5.4.6/usage/configfile/#all-options-example
apiVersion: k3d.io/v1alpha4
kind: Simple
servers: 2
agents: 2
network: k3d-network
  #kubeAPI:
  #hostIP: 0.0.0.0
  #hostPort: "6443"
ports:
- port: 30000:80 # Istio/traefik IngressGateway LoadBalancer NodePort
  nodeFilters:
  - loadbalancer
volumes: # repeatable flags are represented as YAML lists
  - volume: $POD_DATA_PATH:/data #TODO arg  same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
    nodeFilters:
      - server:*
      - agent:*
  - volume: $PWD/auto-deploy-extras:/var/lib/rancher/k3s/server/manifests/auto-deploy-extras
registries: # define how registries should be created or used
  create:
    name: docker-io # name of the registry container
    proxy:
      remoteURL: https://registry-1.docker.io # proxy DockerHub
    volumes:
      - $PROXY_REGISTRY_PATH:/var/lib/registry # persist data locally in /tmp/reg
  # create: # creates a default registry to be used with the cluster; same as `--registry-create registry.localhost`
  #   name: registry.localhost
  #   host: "0.0.0.0"
  #   hostPort: "5000"
  #   volumes:
  #     - /mnt/sdcard/k8s-data/registry-data:/var/lib/registry # persist registry data locally
  config: | # tell K3s to use this registry when pulling from DockerHub
    mirrors:
      "docker.io":
        endpoint:
          - http://docker-io:5000
      "ghcr.io":
        endpoint:
          - http://docker-io:5000
      "quay.io":
        endpoint:
          - http://docker-io:5000
  use:
    - k3d-registry.localhost:5000 # some other k3d-managed registry; same as `--registry-use 'k3d-myotherregistry:5000'`
options:
  k3d:
    wait: true
    timeout: 1m0s
    disableLoadbalancer: false
    disableImageVolume: false
    disableRollback: false
  k3s:
    extraArgs:
    - arg: --tls-san=127.0.0.1
      nodeFilters:
      - server:*
    - arg: --tls-san=chromebox
      nodeFilters:
      - server:*
    - arg: --tls-san=chromebox.lan
      nodeFilters:
      - server:*
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
  runtime: {}
